HydroP = CSV.read("hydroplant.csv",DataFrame);
HydroP = convert(Matrix{Float64}, HydroP[:,2:size(HydroP)[2]]);
H=size(HydroP)[1];

ThermoP = CSV.read("thermoplant.csv",DataFrame);
ThermoP = convert(Matrix{Float64}, ThermoP[:,2:size(ThermoP)[2]]);
F=size(ThermoP)[1];

SCEN = CSV.read("Scenarios.csv",DataFrame);
SCEN = convert(Matrix{Float64}, SCEN[:,3:end]);
Ξ = deepcopy(SCEN);

#parameter that translates the water flow amount into water level in the reservior
c₀= 2.592;

#demand in stage t
dᵗ = 7000;
#penalty for unsatisfied demand 
cᵖ = 500 #penalty

#maximum allowed amount of turbined flow in hydro plant h in stage t
y̅ᵗ = HydroP[:,1];

#minimum/maximum level of water allowed in hydro plant h
v̲ = HydroP[:,2];
v̅= HydroP[:,3];

#initial amount of water at hydro plant h 
x₀ =  HydroP[:,4].*(v̅-v̲);

v̅ = v̅-v̲;
v̲ = v̲-v̲;

#amount of power generated by releasing one unit of water flow in hydro plant h
rʰ = HydroP[:,5];

#maximum allowed amount of power generated by thermal plant f in stage t
g̅ᵗ = ThermoP[:,1];

#unit cost of thermal power generated from plant f
cᶠ  = ThermoP[:,2];

T = 4;
R = 5;